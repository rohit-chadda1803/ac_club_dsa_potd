ðŸŽ¯ Problem of the Day (POTD #13)
ðŸ“† Date: 02/01/2025
@everyone

ðŸ”¸ Task 1: [Max Increase to keep city skyline](<https://leetcode.com/problems/max-increase-to-keep-city-skyline/?envType=problem-list-v2&envId=greedy>)
class Solution {
    
public:
    int maxIncreaseKeepingSkyline(vector<vector<int>>& grid) {
        
        int n= grid.size();
        vector<int> row(n);
        vector<int> col(n,0); 
        for(int i=0; i<n;i++){
            int mx  = grid[i][0];
            for(int j =0; j<n;j++){
                if(grid[i][j]>mx){
                    mx = grid[i][j];
                }
                if(grid[i][j]>col[j]){
                    col[j]=grid[i][j];
                }
            }
            row[i]=mx ;
        }

       
         
        int ans=0;
        for(int i=0;i<n;i++){
            for(int j=0;j<n;j++){
                int curr = grid[i][j] ;
                // modify to .
                int mod= max(curr , min(row[i],col[j]));
                int change= mod-curr;
                ans+= change;
            }
        }
        return ans;
    }
};


ðŸ”¸ Task 2: [Next Round](<https://codeforces.com/problemset/problem/158/A>)

#include <iostream>
#include <vector>
using namespace std;

int main() {
    
    int n, k;
    cin >> n >> k;

   
    vector<int> scores(n);
    for (int i = 0; i < n; i++) {
        cin >> scores[i];
    }

    
    int cutoff_score = scores[k - 1];  
   
    int advancing_count = 0;
    for (int score : scores) {
        if (score >= cutoff_score && score > 0) {
            advancing_count++;
        }
    }

    
    cout << advancing_count << endl;

    return 0;
}

